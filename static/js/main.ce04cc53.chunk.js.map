{"version":3,"sources":["components/NavigationBar.js","pages/DateDiffrence.js","App.js","reportWebVitals.js","index.js"],"names":["NavigationBar","AppBar","position","Toolbar","useStyles","makeStyles","theme","root","width","justifyContent","alignItems","display","flexDirection","textAlign","dispalyDiff","value","label","isNaN","Number","Math","round","EPSILON","abs","addS","displayFullDuration","duration","years","months","days","time","DateDiffrence","classes","useQueryParam","StringParam","date","setDate","mDate","moment","nDate","diff","Container","maxWidth","Card","className","CardContent","Typography","gutterBottom","variant","component","TextField","id","type","onChange","e","target","defaultValue","textField","InputLabelProps","shrink","App","ReactRouterRoute","Route","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce04cc53.chunk.js","sourcesContent":["import { AppBar, Toolbar } from '@material-ui/core';\nimport React from 'react';\n\n\nconst NavigationBar = () => {\n  return (\n    <>\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <h1> Time Tools </h1>\n          </Toolbar>\n      </AppBar>\n      <Toolbar />\n    </>\n  );\n};\n\nexport default NavigationBar;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { useQueryParam, StringParam } from 'use-query-params';\nimport { Card, CardContent, Container, Typography } from '@material-ui/core';\nimport moment from 'moment';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 500,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    textAlign: 'center'\n  }\n}));\n\nconst dispalyDiff = (value, label) => {\n  if (isNaN(Number(value))) {\n    return null;\n  }\n  value = Math.round((value + Number.EPSILON) * 100) / 100 \n  if (value < 0) {\n    return <p> {Math.abs(value)} {label}{addS(value)} from now </p>\n  } else if (value > 0) {\n    return <p> {Math.abs(value)} {label}{addS(value)} ago </p>\n  }\n}\n\nconst addS = (value) => {\n  if(Math.abs(value) > 1) {\n    return 's'\n  }\n  return ''\n}\n\n\nconst displayFullDuration = (duration) => {\n  const years =  duration.years();\n  const months =  duration.months();\n  const days =  duration.days();\n\n  const value = years + months + days \n  let time = ''\n\n\n  if (years) {\n\n    time = time + `${Math.abs(years)} year${addS(years)} `\n  }\n  if (months) {\n    time = time + `${Math.abs(months)} month${addS(months)} `\n  }\n  if (days) {\n    time = time + `${Math.abs(days)} day${addS(days)} `\n  }\n\n  if (value === 0) {\n    return;\n  } else if (value < 0) {\n    time = time + 'from now';\n  } else {\n    time = time + 'ago';\n  }\n\n  return time\n}\n\n\n\nconst DateDiffrence = () => {\n  const classes = useStyles();\n  const [date, setDate] = useQueryParam('date', StringParam);\n  const mDate = moment(date);\n  const nDate = moment();\n  const duration = moment.duration(nDate.diff(mDate))\n  \n  \n\n  return (\n    <>\n      <Container maxWidth=\"sm\">\n        <Card className={classes.root}>\n          <CardContent >\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              Date From\n          </Typography>\n          </CardContent>\n          <CardContent>\n            <TextField\n              id=\"date\"\n              label=\"Select Date\"\n              type=\"date\"\n              onChange={(e) => setDate(e.target.value)}\n              defaultValue={date}\n              className={classes.textField}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </CardContent>\n          <CardContent>\n            <Typography gutterBottom variant=\"body1\" component=\"p\">\n              {displayFullDuration(duration)}\n              {dispalyDiff(nDate.diff(mDate, 'days'), 'Day')}\n              {dispalyDiff(nDate.diff(mDate, 'weeks', true), 'Week')}\n              {dispalyDiff(nDate.diff(mDate, 'months', true), 'Month')}\n              {dispalyDiff(nDate.diff(mDate, 'years', true), 'Year')}\n            </Typography>\n          </CardContent>\n        </Card>\n      </Container>\n    </>\n  );\n};\n\nexport default DateDiffrence;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport { QueryParamProvider } from 'use-query-params';\n\nimport NavigationBar from './components/NavigationBar';\nimport DateDiffrence from './pages/DateDiffrence';\n\n\nfunction App() {\n  return (\n    <Router>\n      <QueryParamProvider ReactRouterRoute={Route}>\n      <NavigationBar />\n      <div>\n        <Switch>\n          <Route path=\"/\">\n            <DateDiffrence />\n          </Route>\n        </Switch>\n      </div>\n      </QueryParamProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}